https://github.com/GPep/ToolsDB/blob/master/SPs/sp_FindBlockingProcs.sql

USE [Tools]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF OBJECT_ID('sp_findBlockingProcesses') IS NULL
  EXEC ('CREATE PROCEDURE sp_findBlockingProcesses AS RETURN 0;')
GO

ALTER PROCEDURE sp_findBlockingProcesses
AS
BEGIN

SET NOCOUNT ON;

-- =============================================
-- Author:		Glenn Pepper
-- Create date: 2018-09-20
-- Version 1.0
-- Description:	this Stored Procedure
-- reports on any blocing processes and places the data in a table for future analysis
-- Might trigger this by an alert. (haven't decided yet!)
-- =============================================


INSERT INTO [Tools].[dbo].[BlockingTable]

( [EventActivated],
  [DBName],
  [request_session_id],
  [blocking_session_id],
  [BlockedObjectName],
  [resource_type],
  [RequestingText],
  [BlockingText],
  [request_mode]

)


SELECT
getdate() as EventActivated,
db.name DBName,
tl.request_session_id,
wt.blocking_session_id,
OBJECT_NAME(p.OBJECT_ID) BlockedObjectName,
tl.resource_type,
h1.TEXT AS RequestingText,
h2.TEXT AS BlockingText,
tl.request_mode

FROM sys.dm_tran_locks AS tl
INNER JOIN sys.databases db ON db.database_id = tl.resource_database_id
INNER JOIN sys.dm_os_waiting_tasks AS wt ON tl.lock_owner_address = wt.resource_address
INNER JOIN sys.partitions AS p ON p.hobt_id = tl.resource_associated_entity_id
INNER JOIN sys.dm_exec_connections ec1 ON ec1.session_id = tl.request_session_id
INNER JOIN sys.dm_exec_connections ec2 ON ec2.session_id = wt.blocking_session_id
CROSS APPLY sys.dm_exec_sql_text(ec1.most_recent_sql_handle) AS h1
CROSS APPLY sys.dm_exec_sql_text(ec2.most_recent_sql_handle) AS h2

END

GO

